/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ValidateSQLRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class ValidateSQLRequest {
  @SerializedName("schema")
  private String schema = null;

  @SerializedName("sql")
  private String sql = null;

  @SerializedName("template_params")
  private Object templateParams = null;

  public ValidateSQLRequest schema(String schema) {
    this.schema = schema;
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @Schema(description = "")
  public String getSchema() {
    return schema;
  }

  public void setSchema(String schema) {
    this.schema = schema;
  }

  public ValidateSQLRequest sql(String sql) {
    this.sql = sql;
    return this;
  }

   /**
   * SQL statement to validate
   * @return sql
  **/
  @Schema(required = true, description = "SQL statement to validate")
  public String getSql() {
    return sql;
  }

  public void setSql(String sql) {
    this.sql = sql;
  }

  public ValidateSQLRequest templateParams(Object templateParams) {
    this.templateParams = templateParams;
    return this;
  }

   /**
   * Get templateParams
   * @return templateParams
  **/
  @Schema(description = "")
  public Object getTemplateParams() {
    return templateParams;
  }

  public void setTemplateParams(Object templateParams) {
    this.templateParams = templateParams;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateSQLRequest validateSQLRequest = (ValidateSQLRequest) o;
    return Objects.equals(this.schema, validateSQLRequest.schema) &&
        Objects.equals(this.sql, validateSQLRequest.sql) &&
        Objects.equals(this.templateParams, validateSQLRequest.templateParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schema, sql, templateParams);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateSQLRequest {\n");
    
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    sql: ").append(toIndentedString(sql)).append("\n");
    sb.append("    templateParams: ").append(toIndentedString(templateParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
