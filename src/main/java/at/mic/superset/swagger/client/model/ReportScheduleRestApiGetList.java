/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.List;
import java.util.Objects;
import java.util.Arrays;
import at.mic.superset.swagger.client.model.ReportScheduleRestApiGetListReportRecipients;
import at.mic.superset.swagger.client.model.ReportScheduleRestApiGetListUser;
import at.mic.superset.swagger.client.model.ReportScheduleRestApiGetListUser1;
import at.mic.superset.swagger.client.model.ReportScheduleRestApiGetListUser2;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * ReportScheduleRestApiGetList
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class ReportScheduleRestApiGetList {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("changed_by")
  private ReportScheduleRestApiGetListUser1 changedBy = null;

  @SerializedName("changed_on")
  private OffsetDateTime changedOn = null;

  @SerializedName("changed_on_delta_humanized")
  private Object changedOnDeltaHumanized = null;

  @SerializedName("chart_id")
  private Integer chartId = null;

  @SerializedName("created_by")
  private ReportScheduleRestApiGetListUser createdBy = null;

  @SerializedName("created_on")
  private OffsetDateTime createdOn = null;

  @SerializedName("creation_method")
  private String creationMethod = null;

  @SerializedName("crontab")
  private String crontab = null;

  @SerializedName("crontab_humanized")
  private Object crontabHumanized = null;

  @SerializedName("dashboard_id")
  private Integer dashboardId = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("last_eval_dttm")
  private OffsetDateTime lastEvalDttm = null;

  @SerializedName("last_state")
  private String lastState = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("owners")
  private List<ReportScheduleRestApiGetListUser2> owners = null;

  @SerializedName("recipients")
  private List<ReportScheduleRestApiGetListReportRecipients> recipients = null;

  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("type")
  private String type = null;

  public ReportScheduleRestApiGetList active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public ReportScheduleRestApiGetList changedBy(ReportScheduleRestApiGetListUser1 changedBy) {
    this.changedBy = changedBy;
    return this;
  }

   /**
   * Get changedBy
   * @return changedBy
  **/
  @Schema(description = "")
  public ReportScheduleRestApiGetListUser1 getChangedBy() {
    return changedBy;
  }

  public void setChangedBy(ReportScheduleRestApiGetListUser1 changedBy) {
    this.changedBy = changedBy;
  }

  public ReportScheduleRestApiGetList changedOn(OffsetDateTime changedOn) {
    this.changedOn = changedOn;
    return this;
  }

   /**
   * Get changedOn
   * @return changedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getChangedOn() {
    return changedOn;
  }

  public void setChangedOn(OffsetDateTime changedOn) {
    this.changedOn = changedOn;
  }

   /**
   * Get changedOnDeltaHumanized
   * @return changedOnDeltaHumanized
  **/
  @Schema(description = "")
  public Object getChangedOnDeltaHumanized() {
    return changedOnDeltaHumanized;
  }

  public ReportScheduleRestApiGetList chartId(Integer chartId) {
    this.chartId = chartId;
    return this;
  }

   /**
   * Get chartId
   * @return chartId
  **/
  @Schema(description = "")
  public Integer getChartId() {
    return chartId;
  }

  public void setChartId(Integer chartId) {
    this.chartId = chartId;
  }

  public ReportScheduleRestApiGetList createdBy(ReportScheduleRestApiGetListUser createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @Schema(description = "")
  public ReportScheduleRestApiGetListUser getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(ReportScheduleRestApiGetListUser createdBy) {
    this.createdBy = createdBy;
  }

  public ReportScheduleRestApiGetList createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public ReportScheduleRestApiGetList creationMethod(String creationMethod) {
    this.creationMethod = creationMethod;
    return this;
  }

   /**
   * Get creationMethod
   * @return creationMethod
  **/
  @Schema(description = "")
  public String getCreationMethod() {
    return creationMethod;
  }

  public void setCreationMethod(String creationMethod) {
    this.creationMethod = creationMethod;
  }

  public ReportScheduleRestApiGetList crontab(String crontab) {
    this.crontab = crontab;
    return this;
  }

   /**
   * Get crontab
   * @return crontab
  **/
  @Schema(required = true, description = "")
  public String getCrontab() {
    return crontab;
  }

  public void setCrontab(String crontab) {
    this.crontab = crontab;
  }

   /**
   * Get crontabHumanized
   * @return crontabHumanized
  **/
  @Schema(description = "")
  public Object getCrontabHumanized() {
    return crontabHumanized;
  }

  public ReportScheduleRestApiGetList dashboardId(Integer dashboardId) {
    this.dashboardId = dashboardId;
    return this;
  }

   /**
   * Get dashboardId
   * @return dashboardId
  **/
  @Schema(description = "")
  public Integer getDashboardId() {
    return dashboardId;
  }

  public void setDashboardId(Integer dashboardId) {
    this.dashboardId = dashboardId;
  }

  public ReportScheduleRestApiGetList description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ReportScheduleRestApiGetList id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ReportScheduleRestApiGetList lastEvalDttm(OffsetDateTime lastEvalDttm) {
    this.lastEvalDttm = lastEvalDttm;
    return this;
  }

   /**
   * Get lastEvalDttm
   * @return lastEvalDttm
  **/
  @Schema(description = "")
  public OffsetDateTime getLastEvalDttm() {
    return lastEvalDttm;
  }

  public void setLastEvalDttm(OffsetDateTime lastEvalDttm) {
    this.lastEvalDttm = lastEvalDttm;
  }

  public ReportScheduleRestApiGetList lastState(String lastState) {
    this.lastState = lastState;
    return this;
  }

   /**
   * Get lastState
   * @return lastState
  **/
  @Schema(description = "")
  public String getLastState() {
    return lastState;
  }

  public void setLastState(String lastState) {
    this.lastState = lastState;
  }

  public ReportScheduleRestApiGetList name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ReportScheduleRestApiGetList owners(List<ReportScheduleRestApiGetListUser2> owners) {
    this.owners = owners;
    return this;
  }

   /**
   * Get owners
   * @return owners
  **/
  @Schema(description = "")
  public List<ReportScheduleRestApiGetListUser2> getOwners() {
    return owners;
  }

  public void setOwners(List<ReportScheduleRestApiGetListUser2> owners) {
    this.owners = owners;
  }

  public ReportScheduleRestApiGetList recipients(List<ReportScheduleRestApiGetListReportRecipients> recipients) {
    this.recipients = recipients;
    return this;
  }

   /**
   * Get recipients
   * @return recipients
  **/
  @Schema(required = true, description = "")
  public List<ReportScheduleRestApiGetListReportRecipients> getRecipients() {
    return recipients;
  }

  public void setRecipients(List<ReportScheduleRestApiGetListReportRecipients> recipients) {
    this.recipients = recipients;
  }

  public ReportScheduleRestApiGetList timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @Schema(description = "")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public ReportScheduleRestApiGetList type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportScheduleRestApiGetList reportScheduleRestApiGetList = (ReportScheduleRestApiGetList) o;
    return Objects.equals(this.active, reportScheduleRestApiGetList.active) &&
        Objects.equals(this.changedBy, reportScheduleRestApiGetList.changedBy) &&
        Objects.equals(this.changedOn, reportScheduleRestApiGetList.changedOn) &&
        Objects.equals(this.changedOnDeltaHumanized, reportScheduleRestApiGetList.changedOnDeltaHumanized) &&
        Objects.equals(this.chartId, reportScheduleRestApiGetList.chartId) &&
        Objects.equals(this.createdBy, reportScheduleRestApiGetList.createdBy) &&
        Objects.equals(this.createdOn, reportScheduleRestApiGetList.createdOn) &&
        Objects.equals(this.creationMethod, reportScheduleRestApiGetList.creationMethod) &&
        Objects.equals(this.crontab, reportScheduleRestApiGetList.crontab) &&
        Objects.equals(this.crontabHumanized, reportScheduleRestApiGetList.crontabHumanized) &&
        Objects.equals(this.dashboardId, reportScheduleRestApiGetList.dashboardId) &&
        Objects.equals(this.description, reportScheduleRestApiGetList.description) &&
        Objects.equals(this.id, reportScheduleRestApiGetList.id) &&
        Objects.equals(this.lastEvalDttm, reportScheduleRestApiGetList.lastEvalDttm) &&
        Objects.equals(this.lastState, reportScheduleRestApiGetList.lastState) &&
        Objects.equals(this.name, reportScheduleRestApiGetList.name) &&
        Objects.equals(this.owners, reportScheduleRestApiGetList.owners) &&
        Objects.equals(this.recipients, reportScheduleRestApiGetList.recipients) &&
        Objects.equals(this.timezone, reportScheduleRestApiGetList.timezone) &&
        Objects.equals(this.type, reportScheduleRestApiGetList.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, changedBy, changedOn, changedOnDeltaHumanized, chartId, createdBy, createdOn, creationMethod, crontab, crontabHumanized, dashboardId, description, id, lastEvalDttm, lastState, name, owners, recipients, timezone, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportScheduleRestApiGetList {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    changedBy: ").append(toIndentedString(changedBy)).append("\n");
    sb.append("    changedOn: ").append(toIndentedString(changedOn)).append("\n");
    sb.append("    changedOnDeltaHumanized: ").append(toIndentedString(changedOnDeltaHumanized)).append("\n");
    sb.append("    chartId: ").append(toIndentedString(chartId)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    creationMethod: ").append(toIndentedString(creationMethod)).append("\n");
    sb.append("    crontab: ").append(toIndentedString(crontab)).append("\n");
    sb.append("    crontabHumanized: ").append(toIndentedString(crontabHumanized)).append("\n");
    sb.append("    dashboardId: ").append(toIndentedString(dashboardId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastEvalDttm: ").append(toIndentedString(lastEvalDttm)).append("\n");
    sb.append("    lastState: ").append(toIndentedString(lastState)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
