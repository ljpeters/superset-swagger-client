/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.List;
import java.util.Objects;
import java.util.Arrays;
import at.mic.superset.swagger.client.model.DatasetRestApiGetListDatabase;
import at.mic.superset.swagger.client.model.DatasetRestApiGetListUser;
import at.mic.superset.swagger.client.model.DatasetRestApiGetListUser1;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DatasetRestApiGetList
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class DatasetRestApiGetList {
  @SerializedName("changed_by")
  private DatasetRestApiGetListUser1 changedBy = null;

  @SerializedName("changed_by_name")
  private Object changedByName = null;

  @SerializedName("changed_by_url")
  private Object changedByUrl = null;

  @SerializedName("changed_on_delta_humanized")
  private Object changedOnDeltaHumanized = null;

  @SerializedName("changed_on_utc")
  private Object changedOnUtc = null;

  @SerializedName("database")
  private DatasetRestApiGetListDatabase database = null;

  @SerializedName("datasource_type")
  private Object datasourceType = null;

  @SerializedName("default_endpoint")
  private String defaultEndpoint = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("explore_url")
  private Object exploreUrl = null;

  @SerializedName("extra")
  private String extra = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("kind")
  private Object kind = null;

  @SerializedName("owners")
  private List<DatasetRestApiGetListUser> owners = null;

  @SerializedName("schema")
  private String schema = null;

  @SerializedName("sql")
  private String sql = null;

  @SerializedName("table_name")
  private String tableName = null;

  public DatasetRestApiGetList changedBy(DatasetRestApiGetListUser1 changedBy) {
    this.changedBy = changedBy;
    return this;
  }

   /**
   * Get changedBy
   * @return changedBy
  **/
  @Schema(description = "")
  public DatasetRestApiGetListUser1 getChangedBy() {
    return changedBy;
  }

  public void setChangedBy(DatasetRestApiGetListUser1 changedBy) {
    this.changedBy = changedBy;
  }

   /**
   * Get changedByName
   * @return changedByName
  **/
  @Schema(description = "")
  public Object getChangedByName() {
    return changedByName;
  }

   /**
   * Get changedByUrl
   * @return changedByUrl
  **/
  @Schema(description = "")
  public Object getChangedByUrl() {
    return changedByUrl;
  }

   /**
   * Get changedOnDeltaHumanized
   * @return changedOnDeltaHumanized
  **/
  @Schema(description = "")
  public Object getChangedOnDeltaHumanized() {
    return changedOnDeltaHumanized;
  }

   /**
   * Get changedOnUtc
   * @return changedOnUtc
  **/
  @Schema(description = "")
  public Object getChangedOnUtc() {
    return changedOnUtc;
  }

  public DatasetRestApiGetList database(DatasetRestApiGetListDatabase database) {
    this.database = database;
    return this;
  }

   /**
   * Get database
   * @return database
  **/
  @Schema(required = true, description = "")
  public DatasetRestApiGetListDatabase getDatabase() {
    return database;
  }

  public void setDatabase(DatasetRestApiGetListDatabase database) {
    this.database = database;
  }

   /**
   * Get datasourceType
   * @return datasourceType
  **/
  @Schema(description = "")
  public Object getDatasourceType() {
    return datasourceType;
  }

  public DatasetRestApiGetList defaultEndpoint(String defaultEndpoint) {
    this.defaultEndpoint = defaultEndpoint;
    return this;
  }

   /**
   * Get defaultEndpoint
   * @return defaultEndpoint
  **/
  @Schema(description = "")
  public String getDefaultEndpoint() {
    return defaultEndpoint;
  }

  public void setDefaultEndpoint(String defaultEndpoint) {
    this.defaultEndpoint = defaultEndpoint;
  }

  public DatasetRestApiGetList description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

   /**
   * Get exploreUrl
   * @return exploreUrl
  **/
  @Schema(description = "")
  public Object getExploreUrl() {
    return exploreUrl;
  }

  public DatasetRestApiGetList extra(String extra) {
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @Schema(description = "")
  public String getExtra() {
    return extra;
  }

  public void setExtra(String extra) {
    this.extra = extra;
  }

  public DatasetRestApiGetList id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

   /**
   * Get kind
   * @return kind
  **/
  @Schema(description = "")
  public Object getKind() {
    return kind;
  }

  public DatasetRestApiGetList owners(List<DatasetRestApiGetListUser> owners) {
    this.owners = owners;
    return this;
  }

   /**
   * Get owners
   * @return owners
  **/
  @Schema(description = "")
  public List<DatasetRestApiGetListUser> getOwners() {
    return owners;
  }

  public void setOwners(List<DatasetRestApiGetListUser> owners) {
    this.owners = owners;
  }

  public DatasetRestApiGetList schema(String schema) {
    this.schema = schema;
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @Schema(description = "")
  public String getSchema() {
    return schema;
  }

  public void setSchema(String schema) {
    this.schema = schema;
  }

  public DatasetRestApiGetList sql(String sql) {
    this.sql = sql;
    return this;
  }

   /**
   * Get sql
   * @return sql
  **/
  @Schema(description = "")
  public String getSql() {
    return sql;
  }

  public void setSql(String sql) {
    this.sql = sql;
  }

  public DatasetRestApiGetList tableName(String tableName) {
    this.tableName = tableName;
    return this;
  }

   /**
   * Get tableName
   * @return tableName
  **/
  @Schema(required = true, description = "")
  public String getTableName() {
    return tableName;
  }

  public void setTableName(String tableName) {
    this.tableName = tableName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatasetRestApiGetList datasetRestApiGetList = (DatasetRestApiGetList) o;
    return Objects.equals(this.changedBy, datasetRestApiGetList.changedBy) &&
        Objects.equals(this.changedByName, datasetRestApiGetList.changedByName) &&
        Objects.equals(this.changedByUrl, datasetRestApiGetList.changedByUrl) &&
        Objects.equals(this.changedOnDeltaHumanized, datasetRestApiGetList.changedOnDeltaHumanized) &&
        Objects.equals(this.changedOnUtc, datasetRestApiGetList.changedOnUtc) &&
        Objects.equals(this.database, datasetRestApiGetList.database) &&
        Objects.equals(this.datasourceType, datasetRestApiGetList.datasourceType) &&
        Objects.equals(this.defaultEndpoint, datasetRestApiGetList.defaultEndpoint) &&
        Objects.equals(this.description, datasetRestApiGetList.description) &&
        Objects.equals(this.exploreUrl, datasetRestApiGetList.exploreUrl) &&
        Objects.equals(this.extra, datasetRestApiGetList.extra) &&
        Objects.equals(this.id, datasetRestApiGetList.id) &&
        Objects.equals(this.kind, datasetRestApiGetList.kind) &&
        Objects.equals(this.owners, datasetRestApiGetList.owners) &&
        Objects.equals(this.schema, datasetRestApiGetList.schema) &&
        Objects.equals(this.sql, datasetRestApiGetList.sql) &&
        Objects.equals(this.tableName, datasetRestApiGetList.tableName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changedBy, changedByName, changedByUrl, changedOnDeltaHumanized, changedOnUtc, database, datasourceType, defaultEndpoint, description, exploreUrl, extra, id, kind, owners, schema, sql, tableName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatasetRestApiGetList {\n");
    
    sb.append("    changedBy: ").append(toIndentedString(changedBy)).append("\n");
    sb.append("    changedByName: ").append(toIndentedString(changedByName)).append("\n");
    sb.append("    changedByUrl: ").append(toIndentedString(changedByUrl)).append("\n");
    sb.append("    changedOnDeltaHumanized: ").append(toIndentedString(changedOnDeltaHumanized)).append("\n");
    sb.append("    changedOnUtc: ").append(toIndentedString(changedOnUtc)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    datasourceType: ").append(toIndentedString(datasourceType)).append("\n");
    sb.append("    defaultEndpoint: ").append(toIndentedString(defaultEndpoint)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    exploreUrl: ").append(toIndentedString(exploreUrl)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    sql: ").append(toIndentedString(sql)).append("\n");
    sb.append("    tableName: ").append(toIndentedString(tableName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
