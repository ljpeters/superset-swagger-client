/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import at.mic.superset.swagger.client.model.InlineResponse2001Filters;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse2001
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-06T17:36:10.263+01:00[Europe/Vienna]")
public class InlineResponse2001 {
  @SerializedName("add_columns")
  private Object addColumns = null;

  @SerializedName("edit_columns")
  private Object editColumns = null;

  @SerializedName("filters")
  private InlineResponse2001Filters filters = null;

  @SerializedName("permissions")
  private List<String> permissions = null;

  public InlineResponse2001 addColumns(Object addColumns) {
    this.addColumns = addColumns;
    return this;
  }

   /**
   * Get addColumns
   * @return addColumns
  **/
  @Schema(description = "")
  public Object getAddColumns() {
    return addColumns;
  }

  public void setAddColumns(Object addColumns) {
    this.addColumns = addColumns;
  }

  public InlineResponse2001 editColumns(Object editColumns) {
    this.editColumns = editColumns;
    return this;
  }

   /**
   * Get editColumns
   * @return editColumns
  **/
  @Schema(description = "")
  public Object getEditColumns() {
    return editColumns;
  }

  public void setEditColumns(Object editColumns) {
    this.editColumns = editColumns;
  }

  public InlineResponse2001 filters(InlineResponse2001Filters filters) {
    this.filters = filters;
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @Schema(description = "")
  public InlineResponse2001Filters getFilters() {
    return filters;
  }

  public void setFilters(InlineResponse2001Filters filters) {
    this.filters = filters;
  }

  public InlineResponse2001 permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public InlineResponse2001 addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<String>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * The user permissions for this API resource
   * @return permissions
  **/
  @Schema(description = "The user permissions for this API resource")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001 inlineResponse2001 = (InlineResponse2001) o;
    return Objects.equals(this.addColumns, inlineResponse2001.addColumns) &&
        Objects.equals(this.editColumns, inlineResponse2001.editColumns) &&
        Objects.equals(this.filters, inlineResponse2001.filters) &&
        Objects.equals(this.permissions, inlineResponse2001.permissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addColumns, editColumns, filters, permissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001 {\n");
    
    sb.append("    addColumns: ").append(toIndentedString(addColumns)).append("\n");
    sb.append("    editColumns: ").append(toIndentedString(editColumns)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
