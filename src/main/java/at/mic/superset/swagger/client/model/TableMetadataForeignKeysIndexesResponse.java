/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import at.mic.superset.swagger.client.model.TableMetadataOptionsResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * TableMetadataForeignKeysIndexesResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class TableMetadataForeignKeysIndexesResponse {
  @SerializedName("column_names")
  private List<String> columnNames = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("options")
  private TableMetadataOptionsResponse options = null;

  @SerializedName("referred_columns")
  private List<String> referredColumns = null;

  @SerializedName("referred_schema")
  private String referredSchema = null;

  @SerializedName("referred_table")
  private String referredTable = null;

  @SerializedName("type")
  private String type = null;

  public TableMetadataForeignKeysIndexesResponse columnNames(List<String> columnNames) {
    this.columnNames = columnNames;
    return this;
  }

  public TableMetadataForeignKeysIndexesResponse addColumnNamesItem(String columnNamesItem) {
    if (this.columnNames == null) {
      this.columnNames = new ArrayList<String>();
    }
    this.columnNames.add(columnNamesItem);
    return this;
  }

   /**
   * Get columnNames
   * @return columnNames
  **/
  @Schema(description = "")
  public List<String> getColumnNames() {
    return columnNames;
  }

  public void setColumnNames(List<String> columnNames) {
    this.columnNames = columnNames;
  }

  public TableMetadataForeignKeysIndexesResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the foreign key or index
   * @return name
  **/
  @Schema(description = "The name of the foreign key or index")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TableMetadataForeignKeysIndexesResponse options(TableMetadataOptionsResponse options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @Schema(description = "")
  public TableMetadataOptionsResponse getOptions() {
    return options;
  }

  public void setOptions(TableMetadataOptionsResponse options) {
    this.options = options;
  }

  public TableMetadataForeignKeysIndexesResponse referredColumns(List<String> referredColumns) {
    this.referredColumns = referredColumns;
    return this;
  }

  public TableMetadataForeignKeysIndexesResponse addReferredColumnsItem(String referredColumnsItem) {
    if (this.referredColumns == null) {
      this.referredColumns = new ArrayList<String>();
    }
    this.referredColumns.add(referredColumnsItem);
    return this;
  }

   /**
   * Get referredColumns
   * @return referredColumns
  **/
  @Schema(description = "")
  public List<String> getReferredColumns() {
    return referredColumns;
  }

  public void setReferredColumns(List<String> referredColumns) {
    this.referredColumns = referredColumns;
  }

  public TableMetadataForeignKeysIndexesResponse referredSchema(String referredSchema) {
    this.referredSchema = referredSchema;
    return this;
  }

   /**
   * Get referredSchema
   * @return referredSchema
  **/
  @Schema(description = "")
  public String getReferredSchema() {
    return referredSchema;
  }

  public void setReferredSchema(String referredSchema) {
    this.referredSchema = referredSchema;
  }

  public TableMetadataForeignKeysIndexesResponse referredTable(String referredTable) {
    this.referredTable = referredTable;
    return this;
  }

   /**
   * Get referredTable
   * @return referredTable
  **/
  @Schema(description = "")
  public String getReferredTable() {
    return referredTable;
  }

  public void setReferredTable(String referredTable) {
    this.referredTable = referredTable;
  }

  public TableMetadataForeignKeysIndexesResponse type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableMetadataForeignKeysIndexesResponse tableMetadataForeignKeysIndexesResponse = (TableMetadataForeignKeysIndexesResponse) o;
    return Objects.equals(this.columnNames, tableMetadataForeignKeysIndexesResponse.columnNames) &&
        Objects.equals(this.name, tableMetadataForeignKeysIndexesResponse.name) &&
        Objects.equals(this.options, tableMetadataForeignKeysIndexesResponse.options) &&
        Objects.equals(this.referredColumns, tableMetadataForeignKeysIndexesResponse.referredColumns) &&
        Objects.equals(this.referredSchema, tableMetadataForeignKeysIndexesResponse.referredSchema) &&
        Objects.equals(this.referredTable, tableMetadataForeignKeysIndexesResponse.referredTable) &&
        Objects.equals(this.type, tableMetadataForeignKeysIndexesResponse.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columnNames, name, options, referredColumns, referredSchema, referredTable, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableMetadataForeignKeysIndexesResponse {\n");
    
    sb.append("    columnNames: ").append(toIndentedString(columnNames)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    referredColumns: ").append(toIndentedString(referredColumns)).append("\n");
    sb.append("    referredSchema: ").append(toIndentedString(referredSchema)).append("\n");
    sb.append("    referredTable: ").append(toIndentedString(referredTable)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
