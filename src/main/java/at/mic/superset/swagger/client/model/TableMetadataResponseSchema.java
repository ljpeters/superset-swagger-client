/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import at.mic.superset.swagger.client.model.TableMetadataColumnsResponse;
import at.mic.superset.swagger.client.model.TableMetadataForeignKeysIndexesResponse;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * TableMetadataResponseSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class TableMetadataResponseSchema {
  @SerializedName("columns")
  private List<TableMetadataColumnsResponse> columns = null;

  @SerializedName("foreignKeys")
  private List<TableMetadataForeignKeysIndexesResponse> foreignKeys = null;

  @SerializedName("indexes")
  private List<TableMetadataForeignKeysIndexesResponse> indexes = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("primaryKey")
  private AllOfTableMetadataResponseSchemaPrimaryKey primaryKey = null;

  @SerializedName("selectStar")
  private String selectStar = null;

  public TableMetadataResponseSchema columns(List<TableMetadataColumnsResponse> columns) {
    this.columns = columns;
    return this;
  }

  public TableMetadataResponseSchema addColumnsItem(TableMetadataColumnsResponse columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<TableMetadataColumnsResponse>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * A list of columns and their metadata
   * @return columns
  **/
  @Schema(description = "A list of columns and their metadata")
  public List<TableMetadataColumnsResponse> getColumns() {
    return columns;
  }

  public void setColumns(List<TableMetadataColumnsResponse> columns) {
    this.columns = columns;
  }

  public TableMetadataResponseSchema foreignKeys(List<TableMetadataForeignKeysIndexesResponse> foreignKeys) {
    this.foreignKeys = foreignKeys;
    return this;
  }

  public TableMetadataResponseSchema addForeignKeysItem(TableMetadataForeignKeysIndexesResponse foreignKeysItem) {
    if (this.foreignKeys == null) {
      this.foreignKeys = new ArrayList<TableMetadataForeignKeysIndexesResponse>();
    }
    this.foreignKeys.add(foreignKeysItem);
    return this;
  }

   /**
   * A list of foreign keys and their metadata
   * @return foreignKeys
  **/
  @Schema(description = "A list of foreign keys and their metadata")
  public List<TableMetadataForeignKeysIndexesResponse> getForeignKeys() {
    return foreignKeys;
  }

  public void setForeignKeys(List<TableMetadataForeignKeysIndexesResponse> foreignKeys) {
    this.foreignKeys = foreignKeys;
  }

  public TableMetadataResponseSchema indexes(List<TableMetadataForeignKeysIndexesResponse> indexes) {
    this.indexes = indexes;
    return this;
  }

  public TableMetadataResponseSchema addIndexesItem(TableMetadataForeignKeysIndexesResponse indexesItem) {
    if (this.indexes == null) {
      this.indexes = new ArrayList<TableMetadataForeignKeysIndexesResponse>();
    }
    this.indexes.add(indexesItem);
    return this;
  }

   /**
   * A list of indexes and their metadata
   * @return indexes
  **/
  @Schema(description = "A list of indexes and their metadata")
  public List<TableMetadataForeignKeysIndexesResponse> getIndexes() {
    return indexes;
  }

  public void setIndexes(List<TableMetadataForeignKeysIndexesResponse> indexes) {
    this.indexes = indexes;
  }

  public TableMetadataResponseSchema name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the table
   * @return name
  **/
  @Schema(description = "The name of the table")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TableMetadataResponseSchema primaryKey(AllOfTableMetadataResponseSchemaPrimaryKey primaryKey) {
    this.primaryKey = primaryKey;
    return this;
  }

   /**
   * Primary keys metadata
   * @return primaryKey
  **/
  @Schema(description = "Primary keys metadata")
  public AllOfTableMetadataResponseSchemaPrimaryKey getPrimaryKey() {
    return primaryKey;
  }

  public void setPrimaryKey(AllOfTableMetadataResponseSchemaPrimaryKey primaryKey) {
    this.primaryKey = primaryKey;
  }

  public TableMetadataResponseSchema selectStar(String selectStar) {
    this.selectStar = selectStar;
    return this;
  }

   /**
   * SQL select star
   * @return selectStar
  **/
  @Schema(description = "SQL select star")
  public String getSelectStar() {
    return selectStar;
  }

  public void setSelectStar(String selectStar) {
    this.selectStar = selectStar;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableMetadataResponseSchema tableMetadataResponseSchema = (TableMetadataResponseSchema) o;
    return Objects.equals(this.columns, tableMetadataResponseSchema.columns) &&
        Objects.equals(this.foreignKeys, tableMetadataResponseSchema.foreignKeys) &&
        Objects.equals(this.indexes, tableMetadataResponseSchema.indexes) &&
        Objects.equals(this.name, tableMetadataResponseSchema.name) &&
        Objects.equals(this.primaryKey, tableMetadataResponseSchema.primaryKey) &&
        Objects.equals(this.selectStar, tableMetadataResponseSchema.selectStar);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columns, foreignKeys, indexes, name, primaryKey, selectStar);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableMetadataResponseSchema {\n");
    
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    foreignKeys: ").append(toIndentedString(foreignKeys)).append("\n");
    sb.append("    indexes: ").append(toIndentedString(indexes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    primaryKey: ").append(toIndentedString(primaryKey)).append("\n");
    sb.append("    selectStar: ").append(toIndentedString(selectStar)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
