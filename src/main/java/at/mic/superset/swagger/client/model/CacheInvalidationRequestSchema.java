/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import at.mic.superset.swagger.client.model.Datasource;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CacheInvalidationRequestSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class CacheInvalidationRequestSchema {
  @SerializedName("datasource_uids")
  private List<String> datasourceUids = null;

  @SerializedName("datasources")
  private List<Datasource> datasources = null;

  public CacheInvalidationRequestSchema datasourceUids(List<String> datasourceUids) {
    this.datasourceUids = datasourceUids;
    return this;
  }

  public CacheInvalidationRequestSchema addDatasourceUidsItem(String datasourceUidsItem) {
    if (this.datasourceUids == null) {
      this.datasourceUids = new ArrayList<String>();
    }
    this.datasourceUids.add(datasourceUidsItem);
    return this;
  }

   /**
   * The uid of the dataset/datasource this new chart will use. A complete datasource identification needs &#x60;datasouce_uid&#x60; 
   * @return datasourceUids
  **/
  @Schema(description = "The uid of the dataset/datasource this new chart will use. A complete datasource identification needs `datasouce_uid` ")
  public List<String> getDatasourceUids() {
    return datasourceUids;
  }

  public void setDatasourceUids(List<String> datasourceUids) {
    this.datasourceUids = datasourceUids;
  }

  public CacheInvalidationRequestSchema datasources(List<Datasource> datasources) {
    this.datasources = datasources;
    return this;
  }

  public CacheInvalidationRequestSchema addDatasourcesItem(Datasource datasourcesItem) {
    if (this.datasources == null) {
      this.datasources = new ArrayList<Datasource>();
    }
    this.datasources.add(datasourcesItem);
    return this;
  }

   /**
   * A list of the data source and database names
   * @return datasources
  **/
  @Schema(description = "A list of the data source and database names")
  public List<Datasource> getDatasources() {
    return datasources;
  }

  public void setDatasources(List<Datasource> datasources) {
    this.datasources = datasources;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CacheInvalidationRequestSchema cacheInvalidationRequestSchema = (CacheInvalidationRequestSchema) o;
    return Objects.equals(this.datasourceUids, cacheInvalidationRequestSchema.datasourceUids) &&
        Objects.equals(this.datasources, cacheInvalidationRequestSchema.datasources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datasourceUids, datasources);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CacheInvalidationRequestSchema {\n");
    
    sb.append("    datasourceUids: ").append(toIndentedString(datasourceUids)).append("\n");
    sb.append("    datasources: ").append(toIndentedString(datasources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
