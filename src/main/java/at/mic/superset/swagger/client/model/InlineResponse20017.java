/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InlineResponse20017
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class InlineResponse20017 {
  @SerializedName("description")
  private String description = null;

  @SerializedName("json_metadata")
  private String jsonMetadata = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("owner_id")
  private Integer ownerId = null;

  @SerializedName("owner_type")
  private Integer ownerType = null;

  @SerializedName("parameters")
  private Object parameters = null;

  public InlineResponse20017 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description field of the filter set
   * @return description
  **/
  @Schema(description = "A description field of the filter set")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InlineResponse20017 jsonMetadata(String jsonMetadata) {
    this.jsonMetadata = jsonMetadata;
    return this;
  }

   /**
   * metadata of the filter set
   * @return jsonMetadata
  **/
  @Schema(description = "metadata of the filter set")
  public String getJsonMetadata() {
    return jsonMetadata;
  }

  public void setJsonMetadata(String jsonMetadata) {
    this.jsonMetadata = jsonMetadata;
  }

  public InlineResponse20017 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the Filter set
   * @return name
  **/
  @Schema(description = "Name of the Filter set")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse20017 ownerId(Integer ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * A description field of the filter set
   * @return ownerId
  **/
  @Schema(description = "A description field of the filter set")
  public Integer getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(Integer ownerId) {
    this.ownerId = ownerId;
  }

  public InlineResponse20017 ownerType(Integer ownerType) {
    this.ownerType = ownerType;
    return this;
  }

   /**
   * the Type of the owner ( Dashboard/User)
   * @return ownerType
  **/
  @Schema(description = "the Type of the owner ( Dashboard/User)")
  public Integer getOwnerType() {
    return ownerType;
  }

  public void setOwnerType(Integer ownerType) {
    this.ownerType = ownerType;
  }

  public InlineResponse20017 parameters(Object parameters) {
    this.parameters = parameters;
    return this;
  }

   /**
   * JSON schema defining the needed parameters
   * @return parameters
  **/
  @Schema(description = "JSON schema defining the needed parameters")
  public Object getParameters() {
    return parameters;
  }

  public void setParameters(Object parameters) {
    this.parameters = parameters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20017 inlineResponse20017 = (InlineResponse20017) o;
    return Objects.equals(this.description, inlineResponse20017.description) &&
        Objects.equals(this.jsonMetadata, inlineResponse20017.jsonMetadata) &&
        Objects.equals(this.name, inlineResponse20017.name) &&
        Objects.equals(this.ownerId, inlineResponse20017.ownerId) &&
        Objects.equals(this.ownerType, inlineResponse20017.ownerType) &&
        Objects.equals(this.parameters, inlineResponse20017.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, jsonMetadata, name, ownerId, ownerType, parameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20017 {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    jsonMetadata: ").append(toIndentedString(jsonMetadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    ownerType: ").append(toIndentedString(ownerType)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
