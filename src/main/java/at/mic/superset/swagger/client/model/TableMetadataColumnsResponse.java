/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * TableMetadataColumnsResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class TableMetadataColumnsResponse {
  @SerializedName("duplicates_constraint")
  private String duplicatesConstraint = null;

  @SerializedName("keys")
  private List<String> keys = null;

  @SerializedName("longType")
  private String longType = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("type")
  private String type = null;

  public TableMetadataColumnsResponse duplicatesConstraint(String duplicatesConstraint) {
    this.duplicatesConstraint = duplicatesConstraint;
    return this;
  }

   /**
   * Get duplicatesConstraint
   * @return duplicatesConstraint
  **/
  @Schema(description = "")
  public String getDuplicatesConstraint() {
    return duplicatesConstraint;
  }

  public void setDuplicatesConstraint(String duplicatesConstraint) {
    this.duplicatesConstraint = duplicatesConstraint;
  }

  public TableMetadataColumnsResponse keys(List<String> keys) {
    this.keys = keys;
    return this;
  }

  public TableMetadataColumnsResponse addKeysItem(String keysItem) {
    if (this.keys == null) {
      this.keys = new ArrayList<String>();
    }
    this.keys.add(keysItem);
    return this;
  }

   /**
   * Get keys
   * @return keys
  **/
  @Schema(description = "")
  public List<String> getKeys() {
    return keys;
  }

  public void setKeys(List<String> keys) {
    this.keys = keys;
  }

  public TableMetadataColumnsResponse longType(String longType) {
    this.longType = longType;
    return this;
  }

   /**
   * The actual backend long type for the column
   * @return longType
  **/
  @Schema(description = "The actual backend long type for the column")
  public String getLongType() {
    return longType;
  }

  public void setLongType(String longType) {
    this.longType = longType;
  }

  public TableMetadataColumnsResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The column name
   * @return name
  **/
  @Schema(description = "The column name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TableMetadataColumnsResponse type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The column type
   * @return type
  **/
  @Schema(description = "The column type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TableMetadataColumnsResponse tableMetadataColumnsResponse = (TableMetadataColumnsResponse) o;
    return Objects.equals(this.duplicatesConstraint, tableMetadataColumnsResponse.duplicatesConstraint) &&
        Objects.equals(this.keys, tableMetadataColumnsResponse.keys) &&
        Objects.equals(this.longType, tableMetadataColumnsResponse.longType) &&
        Objects.equals(this.name, tableMetadataColumnsResponse.name) &&
        Objects.equals(this.type, tableMetadataColumnsResponse.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duplicatesConstraint, keys, longType, name, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TableMetadataColumnsResponse {\n");
    
    sb.append("    duplicatesConstraint: ").append(toIndentedString(duplicatesConstraint)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("    longType: ").append(toIndentedString(longType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
