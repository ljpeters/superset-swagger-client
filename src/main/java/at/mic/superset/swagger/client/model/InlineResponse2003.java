/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import at.mic.superset.swagger.client.model.AnnotationLayerRestApiGet;
import at.mic.superset.swagger.client.model.InlineResponse2001DescriptionColumns;
import at.mic.superset.swagger.client.model.InlineResponse2001LabelColumns;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse2003
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class InlineResponse2003 {
  @SerializedName("description_columns")
  private InlineResponse2001DescriptionColumns descriptionColumns = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("label_columns")
  private InlineResponse2001LabelColumns labelColumns = null;

  @SerializedName("result")
  private AnnotationLayerRestApiGet result = null;

  @SerializedName("show_columns")
  private List<String> showColumns = null;

  @SerializedName("show_title")
  private String showTitle = null;

  public InlineResponse2003 descriptionColumns(InlineResponse2001DescriptionColumns descriptionColumns) {
    this.descriptionColumns = descriptionColumns;
    return this;
  }

   /**
   * Get descriptionColumns
   * @return descriptionColumns
  **/
  @Schema(description = "")
  public InlineResponse2001DescriptionColumns getDescriptionColumns() {
    return descriptionColumns;
  }

  public void setDescriptionColumns(InlineResponse2001DescriptionColumns descriptionColumns) {
    this.descriptionColumns = descriptionColumns;
  }

  public InlineResponse2003 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The item id
   * @return id
  **/
  @Schema(description = "The item id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse2003 labelColumns(InlineResponse2001LabelColumns labelColumns) {
    this.labelColumns = labelColumns;
    return this;
  }

   /**
   * Get labelColumns
   * @return labelColumns
  **/
  @Schema(description = "")
  public InlineResponse2001LabelColumns getLabelColumns() {
    return labelColumns;
  }

  public void setLabelColumns(InlineResponse2001LabelColumns labelColumns) {
    this.labelColumns = labelColumns;
  }

  public InlineResponse2003 result(AnnotationLayerRestApiGet result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @Schema(description = "")
  public AnnotationLayerRestApiGet getResult() {
    return result;
  }

  public void setResult(AnnotationLayerRestApiGet result) {
    this.result = result;
  }

  public InlineResponse2003 showColumns(List<String> showColumns) {
    this.showColumns = showColumns;
    return this;
  }

  public InlineResponse2003 addShowColumnsItem(String showColumnsItem) {
    if (this.showColumns == null) {
      this.showColumns = new ArrayList<String>();
    }
    this.showColumns.add(showColumnsItem);
    return this;
  }

   /**
   * A list of columns
   * @return showColumns
  **/
  @Schema(description = "A list of columns")
  public List<String> getShowColumns() {
    return showColumns;
  }

  public void setShowColumns(List<String> showColumns) {
    this.showColumns = showColumns;
  }

  public InlineResponse2003 showTitle(String showTitle) {
    this.showTitle = showTitle;
    return this;
  }

   /**
   * A title to render. Will be translated by babel
   * @return showTitle
  **/
  @Schema(example = "Show Item Details", description = "A title to render. Will be translated by babel")
  public String getShowTitle() {
    return showTitle;
  }

  public void setShowTitle(String showTitle) {
    this.showTitle = showTitle;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2003 inlineResponse2003 = (InlineResponse2003) o;
    return Objects.equals(this.descriptionColumns, inlineResponse2003.descriptionColumns) &&
        Objects.equals(this.id, inlineResponse2003.id) &&
        Objects.equals(this.labelColumns, inlineResponse2003.labelColumns) &&
        Objects.equals(this.result, inlineResponse2003.result) &&
        Objects.equals(this.showColumns, inlineResponse2003.showColumns) &&
        Objects.equals(this.showTitle, inlineResponse2003.showTitle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(descriptionColumns, id, labelColumns, result, showColumns, showTitle);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2003 {\n");
    
    sb.append("    descriptionColumns: ").append(toIndentedString(descriptionColumns)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labelColumns: ").append(toIndentedString(labelColumns)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    showColumns: ").append(toIndentedString(showColumns)).append("\n");
    sb.append("    showTitle: ").append(toIndentedString(showTitle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
