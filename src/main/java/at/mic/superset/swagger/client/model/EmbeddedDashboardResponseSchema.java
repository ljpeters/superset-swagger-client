/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import at.mic.superset.swagger.client.model.User;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * EmbeddedDashboardResponseSchema
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class EmbeddedDashboardResponseSchema {
  @SerializedName("allowed_domains")
  private List<String> allowedDomains = null;

  @SerializedName("changed_by")
  private User changedBy = null;

  @SerializedName("changed_on")
  private OffsetDateTime changedOn = null;

  @SerializedName("dashboard_id")
  private String dashboardId = null;

  @SerializedName("uuid")
  private String uuid = null;

  public EmbeddedDashboardResponseSchema allowedDomains(List<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
    return this;
  }

  public EmbeddedDashboardResponseSchema addAllowedDomainsItem(String allowedDomainsItem) {
    if (this.allowedDomains == null) {
      this.allowedDomains = new ArrayList<String>();
    }
    this.allowedDomains.add(allowedDomainsItem);
    return this;
  }

   /**
   * Get allowedDomains
   * @return allowedDomains
  **/
  @Schema(description = "")
  public List<String> getAllowedDomains() {
    return allowedDomains;
  }

  public void setAllowedDomains(List<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
  }

  public EmbeddedDashboardResponseSchema changedBy(User changedBy) {
    this.changedBy = changedBy;
    return this;
  }

   /**
   * Get changedBy
   * @return changedBy
  **/
  @Schema(description = "")
  public User getChangedBy() {
    return changedBy;
  }

  public void setChangedBy(User changedBy) {
    this.changedBy = changedBy;
  }

  public EmbeddedDashboardResponseSchema changedOn(OffsetDateTime changedOn) {
    this.changedOn = changedOn;
    return this;
  }

   /**
   * Get changedOn
   * @return changedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getChangedOn() {
    return changedOn;
  }

  public void setChangedOn(OffsetDateTime changedOn) {
    this.changedOn = changedOn;
  }

  public EmbeddedDashboardResponseSchema dashboardId(String dashboardId) {
    this.dashboardId = dashboardId;
    return this;
  }

   /**
   * Get dashboardId
   * @return dashboardId
  **/
  @Schema(description = "")
  public String getDashboardId() {
    return dashboardId;
  }

  public void setDashboardId(String dashboardId) {
    this.dashboardId = dashboardId;
  }

  public EmbeddedDashboardResponseSchema uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmbeddedDashboardResponseSchema embeddedDashboardResponseSchema = (EmbeddedDashboardResponseSchema) o;
    return Objects.equals(this.allowedDomains, embeddedDashboardResponseSchema.allowedDomains) &&
        Objects.equals(this.changedBy, embeddedDashboardResponseSchema.changedBy) &&
        Objects.equals(this.changedOn, embeddedDashboardResponseSchema.changedOn) &&
        Objects.equals(this.dashboardId, embeddedDashboardResponseSchema.dashboardId) &&
        Objects.equals(this.uuid, embeddedDashboardResponseSchema.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedDomains, changedBy, changedOn, dashboardId, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmbeddedDashboardResponseSchema {\n");
    
    sb.append("    allowedDomains: ").append(toIndentedString(allowedDomains)).append("\n");
    sb.append("    changedBy: ").append(toIndentedString(changedBy)).append("\n");
    sb.append("    changedOn: ").append(toIndentedString(changedOn)).append("\n");
    sb.append("    dashboardId: ").append(toIndentedString(dashboardId)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
