/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
/**
 * DatasetRestApiGetSqlMetric
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-08-29T14:48:42.974+02:00[Europe/Berlin]")
public class DatasetRestApiGetSqlMetric {
  @SerializedName("changed_on")
  private OffsetDateTime changedOn = null;

  @SerializedName("created_on")
  private OffsetDateTime createdOn = null;

  @SerializedName("d3format")
  private String d3format = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("expression")
  private String expression = null;

  @SerializedName("extra")
  private String extra = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("metric_name")
  private String metricName = null;

  @SerializedName("metric_type")
  private String metricType = null;

  @SerializedName("uuid")
  private UUID uuid = null;

  @SerializedName("verbose_name")
  private String verboseName = null;

  @SerializedName("warning_text")
  private String warningText = null;

  public DatasetRestApiGetSqlMetric changedOn(OffsetDateTime changedOn) {
    this.changedOn = changedOn;
    return this;
  }

   /**
   * Get changedOn
   * @return changedOn
  **/
  @Schema(description = "")
  public OffsetDateTime getChangedOn() {
    return changedOn;
  }

  public void setChangedOn(OffsetDateTime changedOn) {
    this.changedOn = changedOn;
  }

  public DatasetRestApiGetSqlMetric createdOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
    return this;
  }

   /**
   * Get createdOn
   * @return createdOn
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedOn() {
    return createdOn;
  }

  public void setCreatedOn(OffsetDateTime createdOn) {
    this.createdOn = createdOn;
  }

  public DatasetRestApiGetSqlMetric d3format(String d3format) {
    this.d3format = d3format;
    return this;
  }

   /**
   * Get d3format
   * @return d3format
  **/
  @Schema(description = "")
  public String getD3format() {
    return d3format;
  }

  public void setD3format(String d3format) {
    this.d3format = d3format;
  }

  public DatasetRestApiGetSqlMetric description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DatasetRestApiGetSqlMetric expression(String expression) {
    this.expression = expression;
    return this;
  }

   /**
   * Get expression
   * @return expression
  **/
  @Schema(required = true, description = "")
  public String getExpression() {
    return expression;
  }

  public void setExpression(String expression) {
    this.expression = expression;
  }

  public DatasetRestApiGetSqlMetric extra(String extra) {
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @Schema(description = "")
  public String getExtra() {
    return extra;
  }

  public void setExtra(String extra) {
    this.extra = extra;
  }

  public DatasetRestApiGetSqlMetric id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public DatasetRestApiGetSqlMetric metricName(String metricName) {
    this.metricName = metricName;
    return this;
  }

   /**
   * Get metricName
   * @return metricName
  **/
  @Schema(required = true, description = "")
  public String getMetricName() {
    return metricName;
  }

  public void setMetricName(String metricName) {
    this.metricName = metricName;
  }

  public DatasetRestApiGetSqlMetric metricType(String metricType) {
    this.metricType = metricType;
    return this;
  }

   /**
   * Get metricType
   * @return metricType
  **/
  @Schema(description = "")
  public String getMetricType() {
    return metricType;
  }

  public void setMetricType(String metricType) {
    this.metricType = metricType;
  }

  public DatasetRestApiGetSqlMetric uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public DatasetRestApiGetSqlMetric verboseName(String verboseName) {
    this.verboseName = verboseName;
    return this;
  }

   /**
   * Get verboseName
   * @return verboseName
  **/
  @Schema(description = "")
  public String getVerboseName() {
    return verboseName;
  }

  public void setVerboseName(String verboseName) {
    this.verboseName = verboseName;
  }

  public DatasetRestApiGetSqlMetric warningText(String warningText) {
    this.warningText = warningText;
    return this;
  }

   /**
   * Get warningText
   * @return warningText
  **/
  @Schema(description = "")
  public String getWarningText() {
    return warningText;
  }

  public void setWarningText(String warningText) {
    this.warningText = warningText;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatasetRestApiGetSqlMetric datasetRestApiGetSqlMetric = (DatasetRestApiGetSqlMetric) o;
    return Objects.equals(this.changedOn, datasetRestApiGetSqlMetric.changedOn) &&
        Objects.equals(this.createdOn, datasetRestApiGetSqlMetric.createdOn) &&
        Objects.equals(this.d3format, datasetRestApiGetSqlMetric.d3format) &&
        Objects.equals(this.description, datasetRestApiGetSqlMetric.description) &&
        Objects.equals(this.expression, datasetRestApiGetSqlMetric.expression) &&
        Objects.equals(this.extra, datasetRestApiGetSqlMetric.extra) &&
        Objects.equals(this.id, datasetRestApiGetSqlMetric.id) &&
        Objects.equals(this.metricName, datasetRestApiGetSqlMetric.metricName) &&
        Objects.equals(this.metricType, datasetRestApiGetSqlMetric.metricType) &&
        Objects.equals(this.uuid, datasetRestApiGetSqlMetric.uuid) &&
        Objects.equals(this.verboseName, datasetRestApiGetSqlMetric.verboseName) &&
        Objects.equals(this.warningText, datasetRestApiGetSqlMetric.warningText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changedOn, createdOn, d3format, description, expression, extra, id, metricName, metricType, uuid, verboseName, warningText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatasetRestApiGetSqlMetric {\n");
    
    sb.append("    changedOn: ").append(toIndentedString(changedOn)).append("\n");
    sb.append("    createdOn: ").append(toIndentedString(createdOn)).append("\n");
    sb.append("    d3format: ").append(toIndentedString(d3format)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expression: ").append(toIndentedString(expression)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metricName: ").append(toIndentedString(metricName)).append("\n");
    sb.append("    metricType: ").append(toIndentedString(metricType)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    verboseName: ").append(toIndentedString(verboseName)).append("\n");
    sb.append("    warningText: ").append(toIndentedString(warningText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
