/*
 * Superset
 * Superset
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package at.mic.superset.swagger.client;

import at.mic.superset.swagger.ApiException;
import at.mic.superset.swagger.client.model.DatasetRelatedObjectsResponse;
import at.mic.superset.swagger.client.model.DatasetRestApiPost;
import at.mic.superset.swagger.client.model.DatasetRestApiPut;
import at.mic.superset.swagger.client.model.GetInfoSchema;
import at.mic.superset.swagger.client.model.GetItemSchema;
import at.mic.superset.swagger.client.model.GetListSchema;
import at.mic.superset.swagger.client.model.InlineResponse2001;
import at.mic.superset.swagger.client.model.InlineResponse20013;
import at.mic.superset.swagger.client.model.InlineResponse20014;
import at.mic.superset.swagger.client.model.InlineResponse20015;
import at.mic.superset.swagger.client.model.InlineResponse2003;
import at.mic.superset.swagger.client.model.InlineResponse2012;
import at.mic.superset.swagger.client.model.InlineResponse400;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatasetsApi
 */
@Ignore
public class DatasetsApiTest {

    private final DatasetsApi api = new DatasetsApi();

    /**
     * 
     *
     * Exports multiple datasets and downloads them as YAML files
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetExportGetTest() throws ApiException {
        List<Integer> q = null;
        String response = api.datasetExportGet(q);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get a list of models
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetGetTest() throws ApiException {
        GetListSchema q = null;
        InlineResponse20013 response = api.datasetGet(q);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get metadata information about this API resource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetInfoGetTest() throws ApiException {
        GetInfoSchema q = null;
        InlineResponse2001 response = api.datasetInfoGet(q);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a Dataset
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetPkDeleteTest() throws ApiException {
        Integer pk = null;
        InlineResponse400 response = api.datasetPkDelete(pk);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get an item model
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetPkGetTest() throws ApiException {
        Integer pk = null;
        GetItemSchema q = null;
        InlineResponse20014 response = api.datasetPkGet(pk, q);

        // TODO: test validations
    }
    /**
     * 
     *
     * Changes a Dataset
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetPkPutTest() throws ApiException {
        DatasetRestApiPut body = null;
        Integer pk = null;
        InlineResponse20015 response = api.datasetPkPut(body, pk);

        // TODO: test validations
    }
    /**
     * 
     *
     * Refreshes and updates columns of a dataset
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetPkRefreshPutTest() throws ApiException {
        Integer pk = null;
        InlineResponse400 response = api.datasetPkRefreshPut(pk);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get charts and dashboards count associated to a dataset
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetPkRelatedObjectsGetTest() throws ApiException {
        Integer pk = null;
        DatasetRelatedObjectsResponse response = api.datasetPkRelatedObjectsGet(pk);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create a new Dataset
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetPostTest() throws ApiException {
        DatasetRestApiPost body = null;
        InlineResponse2012 response = api.datasetPost(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void datasetRelatedColumnNameGetTest() throws ApiException {
        String columnName = null;
        Object q = null;
        InlineResponse2003 response = api.datasetRelatedColumnNameGet(columnName, q);

        // TODO: test validations
    }
}
